<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="live.huanghe.common.dao.LiveHuangheUserMapper">
  <resultMap id="BaseResultMap" type="live.huanghe.common.domain.LiveHuangheUser">
    <!--@mbg.generated-->
    <!--@Table live_huanghe_user-->
    <id column="user_id" property="userId" />
    <result column="user_name" property="userName" />
    <result column="pass_word" property="passWord" />
    <result column="user_birth_day" property="userBirthDay" />
    <result column="user_email" property="userEmail" />
    <result column="user_phone" property="userPhone" />
    <result column="user_website" property="userWebsite" />
    <result column="user_address" property="userAddress" />
    <result column="user_type" property="userType" />
    <result column="user_status" property="userStatus" />
    <result column="user_head_img" property="userHeadImg" />
    <result column="user_create_time" property="userCreateTime" />
    <result column="user_update_time" property="userUpdateTime" />
    <result column="user_last_login_time" property="userLastLoginTime" />
    <result column="user_last_login_ip" property="userLastLoginIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user_id, user_name, pass_word, user_birth_day, user_email, user_phone, user_website, 
    user_address, user_type, user_status, user_head_img, user_create_time, user_update_time, 
    user_last_login_time, user_last_login_ip
  </sql>
  <select id="selectByExample" parameterType="live.huanghe.common.domain.LiveHuangheUserExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from live_huanghe_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from live_huanghe_user
    where user_id = #{userId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from live_huanghe_user
    where user_id = #{userId}
  </delete>
  <delete id="deleteByExample" parameterType="live.huanghe.common.domain.LiveHuangheUserExample">
    <!--@mbg.generated-->
    delete from live_huanghe_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="live.huanghe.common.domain.LiveHuangheUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into live_huanghe_user (user_name, pass_word, user_birth_day, user_email, user_phone, user_website, 
      user_address, user_type, user_status, user_head_img, user_create_time, 
      user_update_time, user_last_login_time, user_last_login_ip)
    values (#{userName}, #{passWord}, #{userBirthDay}, #{userEmail}, #{userPhone}, #{userWebsite}, 
      #{userAddress}, #{userType}, #{userStatus}, #{userHeadImg}, #{userCreateTime}, 
      #{userUpdateTime}, #{userLastLoginTime}, #{userLastLoginIp})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="live.huanghe.common.domain.LiveHuangheUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into live_huanghe_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        user_name,
      </if>
      <if test="passWord != null and passWord != ''">
        pass_word,
      </if>
      <if test="userBirthDay != null and userBirthDay != ''">
        user_birth_day,
      </if>
      <if test="userEmail != null and userEmail != ''">
        user_email,
      </if>
      <if test="userPhone != null and userPhone != ''">
        user_phone,
      </if>
      <if test="userWebsite != null and userWebsite != ''">
        user_website,
      </if>
      <if test="userAddress != null and userAddress != ''">
        user_address,
      </if>
      <if test="userType != null and userType != ''">
        user_type,
      </if>
      <if test="userStatus != null and userStatus != ''">
        user_status,
      </if>
      <if test="userHeadImg != null and userHeadImg != ''">
        user_head_img,
      </if>
      <if test="userCreateTime != null">
        user_create_time,
      </if>
      <if test="userUpdateTime != null">
        user_update_time,
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time,
      </if>
      <if test="userLastLoginIp != null and userLastLoginIp != ''">
        user_last_login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        #{userName},
      </if>
      <if test="passWord != null and passWord != ''">
        #{passWord},
      </if>
      <if test="userBirthDay != null and userBirthDay != ''">
        #{userBirthDay},
      </if>
      <if test="userEmail != null and userEmail != ''">
        #{userEmail},
      </if>
      <if test="userPhone != null and userPhone != ''">
        #{userPhone},
      </if>
      <if test="userWebsite != null and userWebsite != ''">
        #{userWebsite},
      </if>
      <if test="userAddress != null and userAddress != ''">
        #{userAddress},
      </if>
      <if test="userType != null and userType != ''">
        #{userType},
      </if>
      <if test="userStatus != null and userStatus != ''">
        #{userStatus},
      </if>
      <if test="userHeadImg != null and userHeadImg != ''">
        #{userHeadImg},
      </if>
      <if test="userCreateTime != null">
        #{userCreateTime},
      </if>
      <if test="userUpdateTime != null">
        #{userUpdateTime},
      </if>
      <if test="userLastLoginTime != null">
        #{userLastLoginTime},
      </if>
      <if test="userLastLoginIp != null and userLastLoginIp != ''">
        #{userLastLoginIp},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="live.huanghe.common.domain.LiveHuangheUserExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from live_huanghe_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update live_huanghe_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName},
      </if>
      <if test="record.passWord != null">
        pass_word = #{record.passWord},
      </if>
      <if test="record.userBirthDay != null">
        user_birth_day = #{record.userBirthDay},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone},
      </if>
      <if test="record.userWebsite != null">
        user_website = #{record.userWebsite},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus},
      </if>
      <if test="record.userHeadImg != null">
        user_head_img = #{record.userHeadImg},
      </if>
      <if test="record.userCreateTime != null">
        user_create_time = #{record.userCreateTime},
      </if>
      <if test="record.userUpdateTime != null">
        user_update_time = #{record.userUpdateTime},
      </if>
      <if test="record.userLastLoginTime != null">
        user_last_login_time = #{record.userLastLoginTime},
      </if>
      <if test="record.userLastLoginIp != null">
        user_last_login_ip = #{record.userLastLoginIp},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update live_huanghe_user
    set user_id = #{record.userId},
      user_name = #{record.userName},
      pass_word = #{record.passWord},
      user_birth_day = #{record.userBirthDay},
      user_email = #{record.userEmail},
      user_phone = #{record.userPhone},
      user_website = #{record.userWebsite},
      user_address = #{record.userAddress},
      user_type = #{record.userType},
      user_status = #{record.userStatus},
      user_head_img = #{record.userHeadImg},
      user_create_time = #{record.userCreateTime},
      user_update_time = #{record.userUpdateTime},
      user_last_login_time = #{record.userLastLoginTime},
      user_last_login_ip = #{record.userLastLoginIp}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="live.huanghe.common.domain.LiveHuangheUser">
    <!--@mbg.generated-->
    update live_huanghe_user
    <set>
      <if test="userName != null and userName != ''">
        user_name = #{userName},
      </if>
      <if test="passWord != null and passWord != ''">
        pass_word = #{passWord},
      </if>
      <if test="userBirthDay != null and userBirthDay != ''">
        user_birth_day = #{userBirthDay},
      </if>
      <if test="userEmail != null and userEmail != ''">
        user_email = #{userEmail},
      </if>
      <if test="userPhone != null and userPhone != ''">
        user_phone = #{userPhone},
      </if>
      <if test="userWebsite != null and userWebsite != ''">
        user_website = #{userWebsite},
      </if>
      <if test="userAddress != null and userAddress != ''">
        user_address = #{userAddress},
      </if>
      <if test="userType != null and userType != ''">
        user_type = #{userType},
      </if>
      <if test="userStatus != null and userStatus != ''">
        user_status = #{userStatus},
      </if>
      <if test="userHeadImg != null and userHeadImg != ''">
        user_head_img = #{userHeadImg},
      </if>
      <if test="userCreateTime != null">
        user_create_time = #{userCreateTime},
      </if>
      <if test="userUpdateTime != null">
        user_update_time = #{userUpdateTime},
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time = #{userLastLoginTime},
      </if>
      <if test="userLastLoginIp != null and userLastLoginIp != ''">
        user_last_login_ip = #{userLastLoginIp},
      </if>
    </set>
    where user_id = #{userId}
  </update>
  <update id="updateByPrimaryKey" parameterType="live.huanghe.common.domain.LiveHuangheUser">
    <!--@mbg.generated-->
    update live_huanghe_user
    set user_name = #{userName},
      pass_word = #{passWord},
      user_birth_day = #{userBirthDay},
      user_email = #{userEmail},
      user_phone = #{userPhone},
      user_website = #{userWebsite},
      user_address = #{userAddress},
      user_type = #{userType},
      user_status = #{userStatus},
      user_head_img = #{userHeadImg},
      user_create_time = #{userCreateTime},
      user_update_time = #{userUpdateTime},
      user_last_login_time = #{userLastLoginTime},
      user_last_login_ip = #{userLastLoginIp}
    where user_id = #{userId}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update live_huanghe_user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userName}
        </foreach>
      </trim>
      <trim prefix="pass_word = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.passWord}
        </foreach>
      </trim>
      <trim prefix="user_birth_day = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userBirthDay}
        </foreach>
      </trim>
      <trim prefix="user_email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userEmail}
        </foreach>
      </trim>
      <trim prefix="user_phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userPhone}
        </foreach>
      </trim>
      <trim prefix="user_website = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userWebsite}
        </foreach>
      </trim>
      <trim prefix="user_address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userAddress}
        </foreach>
      </trim>
      <trim prefix="user_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userType}
        </foreach>
      </trim>
      <trim prefix="user_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userStatus}
        </foreach>
      </trim>
      <trim prefix="user_head_img = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userHeadImg}
        </foreach>
      </trim>
      <trim prefix="user_create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userCreateTime}
        </foreach>
      </trim>
      <trim prefix="user_update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userUpdateTime}
        </foreach>
      </trim>
      <trim prefix="user_last_login_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userLastLoginTime}
        </foreach>
      </trim>
      <trim prefix="user_last_login_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when user_id = #{item.userId} then #{item.userLastLoginIp}
        </foreach>
      </trim>
    </trim>
    where user_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.userId}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="user_id" keyProperty="userId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into live_huanghe_user
    (user_name, pass_word, user_birth_day, user_email, user_phone, user_website, user_address, 
      user_type, user_status, user_head_img, user_create_time, user_update_time, user_last_login_time, 
      user_last_login_ip)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userName}, #{item.passWord}, #{item.userBirthDay}, #{item.userEmail}, #{item.userPhone}, 
        #{item.userWebsite}, #{item.userAddress}, #{item.userType}, #{item.userStatus}, 
        #{item.userHeadImg}, #{item.userCreateTime}, #{item.userUpdateTime}, #{item.userLastLoginTime}, 
        #{item.userLastLoginIp})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="user_id" keyProperty="userId" parameterType="live.huanghe.common.domain.LiveHuangheUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into live_huanghe_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      user_name,
      pass_word,
      user_birth_day,
      user_email,
      user_phone,
      user_website,
      user_address,
      user_type,
      user_status,
      user_head_img,
      user_create_time,
      user_update_time,
      user_last_login_time,
      user_last_login_ip,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId},
      </if>
      #{userName},
      #{passWord},
      #{userBirthDay},
      #{userEmail},
      #{userPhone},
      #{userWebsite},
      #{userAddress},
      #{userType},
      #{userStatus},
      #{userHeadImg},
      #{userCreateTime},
      #{userUpdateTime},
      #{userLastLoginTime},
      #{userLastLoginIp},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId},
      </if>
      user_name = #{userName},
      pass_word = #{passWord},
      user_birth_day = #{userBirthDay},
      user_email = #{userEmail},
      user_phone = #{userPhone},
      user_website = #{userWebsite},
      user_address = #{userAddress},
      user_type = #{userType},
      user_status = #{userStatus},
      user_head_img = #{userHeadImg},
      user_create_time = #{userCreateTime},
      user_update_time = #{userUpdateTime},
      user_last_login_time = #{userLastLoginTime},
      user_last_login_ip = #{userLastLoginIp},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="user_id" keyProperty="userId" parameterType="live.huanghe.common.domain.LiveHuangheUser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into live_huanghe_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="userBirthDay != null">
        user_birth_day,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userWebsite != null">
        user_website,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userHeadImg != null">
        user_head_img,
      </if>
      <if test="userCreateTime != null">
        user_create_time,
      </if>
      <if test="userUpdateTime != null">
        user_update_time,
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time,
      </if>
      <if test="userLastLoginIp != null">
        user_last_login_ip,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId},
      </if>
      <if test="userName != null">
        #{userName},
      </if>
      <if test="passWord != null">
        #{passWord},
      </if>
      <if test="userBirthDay != null">
        #{userBirthDay},
      </if>
      <if test="userEmail != null">
        #{userEmail},
      </if>
      <if test="userPhone != null">
        #{userPhone},
      </if>
      <if test="userWebsite != null">
        #{userWebsite},
      </if>
      <if test="userAddress != null">
        #{userAddress},
      </if>
      <if test="userType != null">
        #{userType},
      </if>
      <if test="userStatus != null">
        #{userStatus},
      </if>
      <if test="userHeadImg != null">
        #{userHeadImg},
      </if>
      <if test="userCreateTime != null">
        #{userCreateTime},
      </if>
      <if test="userUpdateTime != null">
        #{userUpdateTime},
      </if>
      <if test="userLastLoginTime != null">
        #{userLastLoginTime},
      </if>
      <if test="userLastLoginIp != null">
        #{userLastLoginIp},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="userName != null">
        user_name = #{userName},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord},
      </if>
      <if test="userBirthDay != null">
        user_birth_day = #{userBirthDay},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone},
      </if>
      <if test="userWebsite != null">
        user_website = #{userWebsite},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress},
      </if>
      <if test="userType != null">
        user_type = #{userType},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus},
      </if>
      <if test="userHeadImg != null">
        user_head_img = #{userHeadImg},
      </if>
      <if test="userCreateTime != null">
        user_create_time = #{userCreateTime},
      </if>
      <if test="userUpdateTime != null">
        user_update_time = #{userUpdateTime},
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time = #{userLastLoginTime},
      </if>
      <if test="userLastLoginIp != null">
        user_last_login_ip = #{userLastLoginIp},
      </if>
    </trim>
  </insert>
</mapper>